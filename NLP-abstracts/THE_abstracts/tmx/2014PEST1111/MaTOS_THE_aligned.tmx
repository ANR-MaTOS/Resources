<?xml version='1.0' encoding='utf-8'?>
<tmx version="1.4b">
    <header creationtool="xml.etree.ElementTree" creationtoolversion="1.3.0" datatype="PlainText" segtype="sentence" adminlang="en-us" srclang="FR" o-tmf="XML" creationdate="2023-04-28" creationid="MaTOS">
        <note>This is the sentence alignement file for THE-theses.fr-2014PEST1111. segId begin by 1, tuid = segId</note>
        <docid>2014PEST1111</docid>
        <elem type="sourceLanguage">FR</elem>
        <elem type="targetLanguage">EN</elem>
    </header>
    <body>
        <tu tuid="1">
            <tuv xml:lang="FR">
                <seg>Le cadre générale de cette thèse est l'analyse quantitative des objets issus de la théorie des langages rationnels.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>The general context of this thesis is the quantitative analysis of objects coming from rational language theory.</seg>
            </tuv>
        </tu>
        <tu tuid="2">
            <tuv xml:lang="FR">
                <seg>On adapte des techniques d'analyse d'algorithmes (complexité en moyenne, complexité générique, génération aléatoire,...) à des objets et à des algorithmes qui font intervenir des classes particulières d'automates.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>We adapt techniques from the field of analysis of algorithms (average-case complexity, generic complexity, random generation...) to objects and algorithms that involve particular classes of automata.</seg>
            </tuv>
        </tu>
        <tu tuid="3">
            <tuv xml:lang="FR">
                <seg>Dans une première partie nous étudions la complexité de l'algorithme de minimisation de Brzozowski.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>In a first part we study the complexity of Brzozowski's minimisation algorithm.</seg>
            </tuv>
        </tu>
        <tu tuid="4">
            <tuv xml:lang="FR">
                <seg>Bien qu'ayant une mauvaise complexité dans le pire des cas, cet algorithme a la réputation d'être efficace en pratique.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Although the worst-case complexity of this algorithm is bad, it is known to be efficient in practice.</seg>
            </tuv>
        </tu>
        <tu tuid="5">
            <tuv xml:lang="FR">
                <seg>En utilisant les propriétés typiques des applications et des permutations aléatoires, nous montrons que la complexité générique de l'algorithme de Brzozowski appliqué à un automate déterministe croît plus vite que tout polynôme en n, où n est le nombre d'états de l'automate.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Using typical properties of random mappings and random permutations, we show that the generic complexityof Brzozowski's algorithm grows faster than any polynomial in n, where n is the number of states of the automaton.</seg>
            </tuv>
        </tu>
        <tu tuid="6">
            <tuv xml:lang="FR">
                <seg>Dans une seconde partie nous nous intéressons à la génération aléatoire d'automates acycliques.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>In a second part, we study the random generation of acyclic automata.</seg>
            </tuv>
        </tu>
        <tu tuid="7">
            <tuv xml:lang="FR">
                <seg>Ces automates sont ceux qui reconnaissent les ensembles finis de mots et sont de ce fait utilisés dans de nombreuses applications, notamment en traitement automatique des langues.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>These automata recognize the finite sets of words, and for this reason they are widely use in applications, especially in natural language processing.</seg>
            </tuv>
        </tu>
        <tu tuid="8">
            <tuv xml:lang="FR">
                <seg>Le premier utilise le modèle des chaînes de Markov, et le second utilise la "méthode récursive", qui tire partie des décompositions combinatoires des objets pour faire de la génération.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>We present two random generators, one using a model of Markov chain, the other a ``recursive method", based on a cominatorics decomposition of structures.</seg>
            </tuv>
        </tu>
        <tu tuid="9">
            <tuv xml:lang="FR">
                <seg>La première méthode est souple mais difficile à calibrer, la seconde s'avère plutôt efficace.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>The first method can be applied in many situations cases but is very difficult to calibrate, the second method is more efficient.</seg>
            </tuv>
        </tu>
        <tu tuid="10">
            <tuv xml:lang="FR">
                <seg>Une fois implantée, cette dernière nous a notamment permis d'observer les propriétés typiques des grands automates acycliques aléatoires</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Once implemented, this second method allows to observe typical properties of acyclic automata of large size</seg>
            </tuv>
        </tu>
    </body>
</tmx>