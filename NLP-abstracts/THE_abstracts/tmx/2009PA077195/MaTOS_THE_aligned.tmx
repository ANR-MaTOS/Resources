<?xml version='1.0' encoding='utf-8'?>
<tmx version="1.4b">
    <header creationtool="xml.etree.ElementTree" creationtoolversion="1.3.0" datatype="PlainText" segtype="sentence" adminlang="en-us" srclang="FR" o-tmf="XML" creationdate="2023-04-28" creationid="MaTOS">
        <note>This is the sentence alignement file for THE-theses.fr-2009PA077195. segId begin by 1, tuid = segId</note>
        <docid>2009PA077195</docid>
        <elem type="sourceLanguage">FR</elem>
        <elem type="targetLanguage">EN</elem>
    </header>
    <body>
        <tu tuid="1">
            <tuv xml:lang="FR">
                <seg>La théorie des automates est apparue pour résoudre des problèmes aussi bien pratiques que théoriques, et ceci dès le début de l'informatique.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Automata theory bas been developed to overcome both theoretical and practical problems.</seg>
            </tuv>
        </tu>
        <tu tuid="2">
            <tuv xml:lang="FR">
                <seg>Désormais, les automates font partie des notions fondamentales de l'informatique, et se retrouvent dans la plupart des logiciels.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Nowadays, automata are considered as basic knowledge by all computer scientists, and they are used in most softwares.</seg>
            </tuv>
        </tu>
        <tu tuid="3">
            <tuv xml:lang="FR">
                <seg>En 1974, Samuel Eilenberg proposa un modèle de calcul qui unifie la plupart des automates (transducteurs, automates à pile et machines de Turing) et qui a une propriété de modularité intéressante au vu d'applications reposant sur différentes couches d'automates ;</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>In 1974, Samuel Eilenberg gave a new machine model unifying the most common automata such as transducers, pushdown automata, and even Turing machines.</seg>
            </tuv>
        </tu>
        <tu tuid="4">
            <tuv xml:lang="FR">
                <seg>Nous proposons de rendre effectif ce modèle en étudiant des techniques de simulation.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>We propose an effective design of Eilenberg machines and study simulation techniques.</seg>
            </tuv>
        </tu>
        <tu tuid="5">
            <tuv xml:lang="FR">
                <seg>Le simulateur est défini par un programme fonctionnel énumérant progressivement les solutions en explorant un espace de recherche selon différentes stratégies.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Our Simulator is defined by a functional program that progressively enumerates solutions, exploring a research space according to various of strategies.</seg>
            </tuv>
        </tu>
        <tu tuid="6">
            <tuv xml:lang="FR">
                <seg>Nous introduisons la notion de machines d'Eilenberg finies pour lesquelles nous fournissons une preuve formelle de correction de la simulation.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>We introduce the notion of finite Eilenberg machines, and formally prove the correction of the underlying simulation engine.</seg>
            </tuv>
        </tu>
        <tu tuid="7">
            <tuv xml:lang="FR">
                <seg>Récemment, un ensemble de travaux approfondissant la notion de dérivées de Brzozowski, a été la source d'algorithmes efficaces de synthèse d'automates non-déterministes à partir d'expressions régulières.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>In recent years, the concept of Brzozowski's derivatives has led to many novel and efficient algorithms that compile regular expressions into non-deterministic automata.</seg>
            </tuv>
        </tu>
        <tu tuid="8">
            <tuv xml:lang="FR">
                <seg>Ces algorithmes sont de nature algébrique et nous en faisons un état de l'art, tout en donnant une implémentation en OCaml permettant de les comparer les uns aux autres dans un cadre commun.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>We review these state of the art algorithms, give an efficient OCaml implémentation, and compare their efficiency in a common framework.</seg>
            </tuv>
        </tu>
    </body>
</tmx>