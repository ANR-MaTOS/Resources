<?xml version='1.0' encoding='utf-8'?>
<tmx version="1.4b">
    <header creationtool="xml.etree.ElementTree" creationtoolversion="1.3.0" datatype="PlainText" segtype="sentence" adminlang="en-us" srclang="FR" o-tmf="XML" creationdate="2023-04-28" creationid="MaTOS">
        <note>This is the sentence alignement file for THE-theses.fr-2019TOU30132. segId begin by 1, tuid = segId</note>
        <docid>2019TOU30132</docid>
        <elem type="sourceLanguage">FR</elem>
        <elem type="targetLanguage">EN</elem>
    </header>
    <body>
        <tu tuid="1">
            <tuv xml:lang="FR">
                <seg>L'évolution constante des besoins des clients et des utilisateurs exige une réponse rapide de la part des équipes logicielles.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>The constantly changing customers'and users'needs require fast response from software teams.</seg>
            </tuv>
        </tu>
        <tu tuid="2">
            <tuv xml:lang="FR">
                <seg>Cela crée une forte demande pour un fonctionnement sans rupture des processus logiciels.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>This creates strong demand for seamlessness of the software processes.</seg>
            </tuv>
        </tu>
        <tu tuid="3">
            <tuv xml:lang="FR">
                <seg>L'intégration, la livraison et le déploiement continus, également connus sous le nom de DevOps, ont fait d'énormes progrès en rendant les processus logiciels réactifs au changement.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Continuous integration, delivery and deployment, also known as DevOps, made a huge progress in making software processes responsive to change.</seg>
            </tuv>
        </tu>
        <tu tuid="4">
            <tuv xml:lang="FR">
                <seg>Aujourd'hui, la plupart des besoins sont exprimés en langage naturel.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>This progress had little effect on software requirements, however.</seg>
            </tuv>
        </tu>
        <tu tuid="5">
            <tuv xml:lang="FR">
                <seg>Cette approche a un grand pouvoir expressif, mais au détriment d'autres aspects de la qualité des exigences telles que la traçabilité, la réutilisabilité, la vérifiabilité et la compréhensibilité.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Specifying requirements still relies on the natural language, which has an enormous expressive power, but inhibits requirements'traceability, verifiability, reusability and understandability.</seg>
            </tuv>
        </tu>
        <tu tuid="6">
            <tuv xml:lang="FR">
                <seg>Le défi est ici d'améliorer ces aspects sans sacrifier l'expressivité.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Promoting the problematic qualities without inhibiting the expressiveness too much introduces a challenge.</seg>
            </tuv>
        </tu>
        <tu tuid="7">
            <tuv xml:lang="FR">
                <seg>Cette approche a motive et inspire les travaux de la présente thèse.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>This approach has motivated and inspired the work on the present thesis.</seg>
            </tuv>
        </tu>
        <tu tuid="8">
            <tuv xml:lang="FR">
                <seg>Alors que l'approche multiexigences se concentre sur la traçabilité et la compréhensibilité, l'approche Seamless Object-Oriented Requirements (SOOR) présentée dans cette thèse prend en compte la vérifiabilité, la réutilisabilité et la compréhensibilité.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>While multirequirements focus on traceability and understandability, the Seamless Object-Oriented Requirements approach presented in the dissertation takes care of verifiability, reusability and understandability.</seg>
            </tuv>
        </tu>
        <tu tuid="9">
            <tuv xml:lang="FR">
                <seg>Cette thèse explore l'hypothèse de Martin Glinz selon laquelle, pour soutenir la continuité, les exigences logicielles devraient être des objets.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>The dissertation explores the Martin Glinz'hypothesis that software requirements should be objects to support seamlessness.</seg>
            </tuv>
        </tu>
        <tu tuid="10">
            <tuv xml:lang="FR">
                <seg>L'exploration confirme l'hypothèse et aboutit à un ensemble de méthodes basées sur des outils pour spécifier, valider, vérifier et réutiliser les exigences orientées objets.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>The exploration confirms the hypothesis and results in a collection of tool-supported methods for specifying, validating, verifying and reusing object-oriented requirements.</seg>
            </tuv>
        </tu>
        <tu tuid="11">
            <tuv xml:lang="FR">
                <seg>La contribution technique réutilisable la plus importante de cette thèse est une bibliothèque Eiffel prête à l'emploi de patrons de classes, qui capturent les modèles d'exigences logicielles récurrents.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>The most significant reusable technical contribution of the dissertation is a ready-to-use Eiffel library of template classes that capture recurring software requirement patterns.</seg>
            </tuv>
        </tu>
        <tu tuid="12">
            <tuv xml:lang="FR">
                <seg>Les exigences orientées objets, concrètes et sans rupture, héritent de ces patrons et deviennent des clients du logiciel spécifié.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Concrete seamless object-oriented requirements inherit from these templates and become clients of the specified software.</seg>
            </tuv>
        </tu>
        <tu tuid="13">
            <tuv xml:lang="FR">
                <seg>Cette thèse s'appuie sur plusieurs expériences et montre que la nouvelle approche propose favorise la vérifiabilité, la réutilisabilité et la compréhensibilité des exigences tout en maintenant l'expressivité à un niveau acceptable.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>The dissertation reflects on several experiments and shows that the new approach promotes requirements'verifiability, reusability and understandability while keeping expressiveness at an acceptable level.</seg>
            </tuv>
        </tu>
        <tu tuid="14">
            <tuv xml:lang="FR">
                <seg>Les expérimentations mettent en oeuvre plusieurs exemples, dont certains sont des standards de l'état de l'art de l'ingénierie des exigences.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>The experiments rely on several examples, some of which are used as benchmarks in the requirements literature.</seg>
            </tuv>
        </tu>
        <tu tuid="15">
            <tuv xml:lang="FR">
                <seg>Chaque expérimentation illustre un problème par un exemple, propose une solution générale et montre comment la solution règle le problème.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Each experiment illustrates a problem through an example, proposes a general solution, and shows how the solution fixes the problem.</seg>
            </tuv>
        </tu>
        <tu tuid="16">
            <tuv xml:lang="FR">
                <seg>Alors que l'expérimentation s'appuie sur Eiffel et son support d'outils avancés, tels que la preuve et les tests automatisés, chaque idée présentée dans l'approche SOOR s'adapte conceptuellement à tout langage de programmation orienté objet typé statiquement, possédant un mécanisme de généricité et un support élémentaire pour les contrats.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>While the experimentation relies on Eiffel and its advanced tool support, such as automated proving and testing, each idea underpinning the approach scales conceptually to any statically typed object-oriented programming language with genericity and elementary support for contracts.</seg>
            </tuv>
        </tu>
    </body>
</tmx>