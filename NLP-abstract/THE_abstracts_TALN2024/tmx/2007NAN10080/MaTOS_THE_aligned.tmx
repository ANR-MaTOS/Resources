<?xml version='1.0' encoding='utf-8'?>
<tmx version="1.4b">
    <header creationtool="xml.etree.ElementTree" creationtoolversion="1.3.0" datatype="PlainText" segtype="sentence" adminlang="en-us" srclang="FR" o-tmf="XML" creationdate="2023-04-28" creationid="MaTOS">
        <note>This is the sentence alignement file for THE-theses.fr-2007NAN10080. segId begin by 1, tuid = segId</note>
        <docid>2007NAN10080</docid>
        <elem type="sourceLanguage">FR</elem>
        <elem type="targetLanguage">EN</elem>
    </header>
    <body>
        <tu tuid="1">
            <tuv xml:lang="FR">
                <seg>La réalisation de surface est une partie du processus global de génération de langue naturelle.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Surface realisation is a subtask of natural language generation.</seg>
            </tuv>
        </tu>
        <tu tuid="2">
            <tuv xml:lang="FR">
                <seg>Étant donné une grammaire et une représentation du sens, le réalisateur de surface produit une chaîne en langue naturelle que la grammaire associe au sens donné en entrée.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>It may be viewed as the inverse of parsing, that is, given a grammar and a representation of meaning, the surface realiser produces a natural language string that is associated by the grammar to the input meaning.</seg>
            </tuv>
        </tu>
        <tu tuid="3">
            <tuv xml:lang="FR">
                <seg>Cette thèse présente trois extension de GenI, un réalisateur de surface pour une grammaire de type FB-LTAG.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>This thesis presents three extensions to GenI, a realisation algorithm for Feature-Based Tree Adjoining Grammar (FB-LTAG).</seg>
            </tuv>
        </tu>
        <tu tuid="4">
            <tuv xml:lang="FR">
                <seg>La première extension augmente l'efficacité du réalisateur pour le traitement de l'ambiguïté lexicale.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>The first extension improves the efficiency of the realiser with respect to lexical ambiguity.</seg>
            </tuv>
        </tu>
        <tu tuid="5">
            <tuv xml:lang="FR">
                <seg>C'est une adaptation de l'optimisation par «étiquetage électrostatique » qui existe déjà pour l'analyse.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>It is an adaptation from parsing of the “electrostatic tagging” optimisation, in which lexical items are associated with a set of polarities, and combinations of those items with non-neutral polarities are filtered out.</seg>
            </tuv>
        </tu>
        <tu tuid="6">
            <tuv xml:lang="FR">
                <seg>La deuxième extension concerne le nombre de sorties retournées par le réalisateur.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>The second extension deals with the number of outputs returned by the realiser.</seg>
            </tuv>
        </tu>
        <tu tuid="7">
            <tuv xml:lang="FR">
                <seg>En temps normal, l'algorithme GenI retourne toutes les phrases associées à une même forme logique.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Normally, the GenI algorithm returns all of the sentences associated with the input logical form.</seg>
            </tuv>
        </tu>
        <tu tuid="8">
            <tuv xml:lang="FR">
                <seg>Alors qu'on peut considérer que ces entrées ont le même sens, elles présentent souvent de subtiles nuances.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Whilst these inputs can be seen as having the same core meaning, they often convey subtle distinctions in emphasis or style.</seg>
            </tuv>
        </tu>
        <tu tuid="9">
            <tuv xml:lang="FR">
                <seg>L'extension est permise par le fait que la grammaire FB-LTAG utilisée par le générateur a été construite à partir d'une « métagrammaire », mettant explicitement en oeuvre les généralisations qu'elle code.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>The extension builds off the fact that the FB-LTAG grammar used by the generator was constructed from a “metagrammar”, explicitly putting to use the linguistic generalisations that are encoded within.</seg>
            </tuv>
        </tu>
        <tu tuid="10">
            <tuv xml:lang="FR">
                <seg>La dernière extension donne la possibilité au réalisateur de servir d'environnement de débuggage de la métagrammaire.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>The final extension provides a means for the realiser to act as a metagrammar-debugging environment.</seg>
            </tuv>
        </tu>
        <tu tuid="11">
            <tuv xml:lang="FR">
                <seg>Les erreurs dans la métagrammaire peuvent avoir des conséquences importantes pour la grammaire.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Mistakes in the metagrammar can have widespread consequences for the grammar.</seg>
            </tuv>
        </tu>
        <tu tuid="12">
            <tuv xml:lang="FR">
                <seg>Comme le réalisateur donne en sortie toutes les chaînes associées à une sémantique d'entrée, il peut être utilisé pour trouver ces erreurs et les localiser dans la métagrammaire.</seg>
            </tuv>
            <tuv xml:lang="EN">
                <seg>Since the realiser can output all strings associated with a semantic input, it can be used to find out what these mistakes are, and crucially, their precise location in the metagrammar.</seg>
            </tuv>
        </tu>
    </body>
</tmx>